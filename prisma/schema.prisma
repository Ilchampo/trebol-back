generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                  Int       @id @default(autoincrement()) @map("id")
  name                String    @map("name")
  logoUrl             String?   @map("logo_url")
  maxInvestorLevels   Int       @map("max_investor_levels")
  minSearchPercentage Float     @map("min_search_percentage")
  companies           Company[]

  @@map("clients")
}

model Company {
  id        Int        @id @default(autoincrement()) @map("id")
  name      String     @map("name")
  code      String     @map("code")
  clientId  Int        @map("client_id")
  client    Client     @relation(fields: [clientId], references: [id], onDelete: Cascade)
  investors Investor[]

  @@map("companies")
}

model Investor {
  id               Int          @id @default(autoincrement()) @map("id")
  companyId        Int          @map("company_id")
  sharePercentage  Float        @map("share_percentage")
  name             String       @map("name")
  code             String       @map("code")
  type             InvestorType @map("type")
  parentInvestorId Int?         @map("parent_investor_id")
  company          Company      @relation(fields: [companyId], references: [id], onDelete: Cascade)
  parentInvestor   Investor?    @relation("InvestorToParent", fields: [parentInvestorId], references: [id])
  childInvestors   Investor[]   @relation("InvestorToParent")
  files            File[]

  @@map("investors")
}

model File {
  id         Int      @id @default(autoincrement()) @map("id")
  investorId Int      @map("investor_id")
  fileType   FileType @map("file_type")
  fileData   Bytes    @map("file_data")
  investor   Investor @relation(fields: [investorId], references: [id], onDelete: Cascade)

  @@map("files")
}

enum InvestorType {
  person
  company
}

enum FileType {
  PDF
  PNG
}
